{
    "swagger": "2.0",
    "info": {
        "description": "Gin swagger",
        "title": "Gin swagger",
        "contact": {
            "name": "NYCUArchery",
            "url": "https://github.com/NYCUarchery"
        },
        "license": {
            "name": "no license yet"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "paths": {
        "/api/competition": {
            "post": {
                "description": "Post one new Competition data with new id, create UnassignedGroup, create Lanes and UnassignedLane which link to UnassignedGroup, add host as admin of competition, and return the new Competition data\nzeroTime 0001-01-01T00:00:00+00:01",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Create one Competition and related data",
                "parameters": [
                    {
                        "description": "Competition",
                        "name": "Competition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/current/{head}/{tail}": {
            "get": {
                "description": "Get current Competitions, head and tail are the range of most recent competitions\nFor example, head = 0, tail = 10, then return the most recent 10 competitions\nhead \u003e= 0, tail \u003e= 0, head \u003c= tail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Show current Competitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "head",
                        "name": "head",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tail",
                        "name": "tail",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/currentphaseminus/{id}": {
            "put": {
                "description": "update one Competition currentPhase --",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition currentPhase --",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/currentphaseplus/{id}": {
            "put": {
                "description": "update one Competition currentPhase ++",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition currentPhase ++",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/eliminationisactive/{id}": {
            "put": {
                "description": "update one Competition Elimination Active to be true",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Elimination Active to be true",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/groups/players/rank/{id}": {
            "put": {
                "description": "Update update all  player ranking of different groups in one Competition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Ranking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/groups/players/{id}": {
            "get": {
                "description": "Get one Competition by id with GroupInfos and Players",
                "summary": "Show one Competition with GroupInfos and Players",
                "responses": {}
            }
        },
        "/api/competition/groups/qualieli/{id}": {
            "get": {
                "description": "Get one Competition by id with related Groups which have related one Qualification id and many Elimination ids",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Show one Competition with Groups Qualification Elimination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/groups/{id}": {
            "get": {
                "description": "Get one Competition by id with GroupInfos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Show one Competition with GroupInfos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/mixedeliminationisactive/{id}": {
            "put": {
                "description": "update one Competition Mixed Elimination Active to be true and create all mixed elimination for groups",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Mixed Elimination Active to be true and create all mixed elimination for groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/participants/{id}": {
            "get": {
                "description": "Get one Competition by id with Participants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Show one Competition with Participants",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/qualificationcurrentendminus/{id}": {
            "put": {
                "description": "update one Competition Qualification currentEnd --",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Qualification currentEnd --",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/qualificationcurrentendplus/{id}": {
            "put": {
                "description": "update one Competition Qualification currentEnd ++",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Qualification currentEnd ++",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/qualificationisactive/{id}": {
            "put": {
                "description": "update one Competition Qualification Active to be true",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Qualification Active to be true",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/recent/{userid}/{head}/{tail}": {
            "get": {
                "description": "Get recent Competitions by User id, head and tail are the range of most recent competitions\nFor example, head = 0, tail = 10, then return the most recent 10 competitions\nhead \u003e= 0, tail \u003e= 0, head \u003c= tail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Show recent Competitions dealing with User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "head",
                        "name": "head",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tail",
                        "name": "tail",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/teameliminationisactive/{id}": {
            "put": {
                "description": "update one Competition Team Elimination Active to be true and create all team elimination for groups",
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition Team Elimination Active to be true and create all team elimination for groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/whole/{id}": {
            "put": {
                "description": "Put whole new Competition and overwrite with the id but without GroupInfo, cannot replace RoundNum, GroupNum, LaneNum, unassignedLaneId, unassignedGroupId\nzeroTime 0001-01-01T00:00:00+00:01",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "update one Competition without GroupInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Competition",
                        "name": "Competition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/competition/{id}": {
            "get": {
                "description": "Get one Competition by id without GroupInfo\nzeroTime 0001-01-01T00:00:00+00:01",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Show one Competition without GroupInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one Competition by id, delete all related groups, lanes, players",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "delete one Competition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination": {
            "post": {
                "description": "Post one new Elimination data, and three medals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Create one Elimination",
                "parameters": [
                    {
                        "description": "Elimination",
                        "name": "Elimination",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/currentend/minus/{id}": {
            "put": {
                "description": "Update one Elimination current end minus one by id",
                "tags": [
                    "Elimination"
                ],
                "summary": "Update one Elimination current end minus one",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/currentend/plus/{id}": {
            "put": {
                "description": "Update one Elimination current end plus one by id",
                "tags": [
                    "Elimination"
                ],
                "summary": "Update one Elimination current end plus one",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/currentstage/minus/{id}": {
            "put": {
                "description": "Update one Elimination current stage minus one by id",
                "tags": [
                    "Elimination"
                ],
                "summary": "Update one Elimination current stage minus one",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/currentstage/plus/{id}": {
            "put": {
                "description": "Update one Elimination current stage plus one by id",
                "tags": [
                    "Elimination"
                ],
                "summary": "Update one Elimination current stage plus one",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/match": {
            "post": {
                "description": "Post one new Match data with 2 matchResults\nEach matchResults with 4 or 5 matchEnds\nEach matchEnds with 3, 4, 6 matchScores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Create one Match",
                "parameters": [
                    {
                        "description": "Match",
                        "name": "Match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/match/scores/{matchid}": {
            "get": {
                "description": "Get one Match with matchResults, matchEnds, scores, playerSets, players by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Show one Match with all related data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/playersets/{id}": {
            "get": {
                "description": "Get one Elimination with player sets by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Show one Elimination with player sets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/scores/{id}": {
            "get": {
                "description": "Get one Elimination with stages, matches, matchResults, matchEnds, scores by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Show one Elimination with all scores",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/stage": {
            "post": {
                "description": "Post one new Stage data with new id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Create one Stage",
                "parameters": [
                    {
                        "description": "Stage",
                        "name": "Stage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/stages/scores/medals/{id}": {
            "get": {
                "description": "Get one Elimination with stages, matches, matchResults, matchEnds, scores, playerSets, players, medals by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Show one Elimination with all related data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/stages/{id}": {
            "get": {
                "description": "Get one Elimination with stages, matches by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Show one Elimination with stages, matches",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/elimination/{id}": {
            "get": {
                "description": "Get one Elimination by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Show one Elimination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete one Elimination by id, and related stages and matches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elimination"
                ],
                "summary": "Delete one Elimination, and related stages and matches",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groupinfo": {
            "post": {
                "description": "Post one new GroupInfo data with new id, create qualification with same id, auto write GroupIndex, and auto create elimination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupInfo"
                ],
                "summary": "Create one GroupInfo",
                "parameters": [
                    {
                        "description": "LaneData",
                        "name": "GroupInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groupinfo/players/{id}": {
            "get": {
                "description": "Get one GroupInfo with players by id, usually ordered by rank",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupInfo"
                ],
                "summary": "Show one GroupInfo with players",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GroupInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groupinfo/reorder": {
            "put": {
                "description": "Put competition_id and group_ids to update GroupInfos Indexes under the same Competition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupInfo"
                ],
                "summary": "update GroupInfos Indexes under the same Competition",
                "parameters": [
                    {
                        "description": "GroupInfo IDs for reorder",
                        "name": "groupIdsForReorder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groupinfo/whole/{id}": {
            "put": {
                "description": "Put whole new GroupInfo and overwrite with the id, cannot overwrite CompetitionId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupInfo"
                ],
                "summary": "update one GroupInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GroupInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GroupInfo",
                        "name": "GroupInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groupinfo/{id}": {
            "get": {
                "description": "Get one GroupInfo by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupInfo"
                ],
                "summary": "Show one GroupInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LaneInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one GroupInfo by id, delete qualification, and change player to UnassignedGroup and UnassignedLane",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupInfo"
                ],
                "summary": "delete one GroupInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GroupInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/lane/all/{id}": {
            "get": {
                "description": "Get all Lane by competition id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lane"
                ],
                "summary": "Show all Lane of a competition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "competition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/lane/scores/{id}": {
            "get": {
                "description": "Get one Lane with players, rounds, roundends, endscores by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lane"
                ],
                "summary": "Show one Lane with players, rounds, roundends, endscores",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lane ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/lane/{id}": {
            "get": {
                "description": "Get one Lane by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lane"
                ],
                "summary": "Show one Lane",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lane ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchend/isconfirmed/{id}": {
            "put": {
                "description": "Update one MatchEnd isConfirmed by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchEnd"
                ],
                "summary": "Update one MatchEnd isConfirmed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchEnd ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchEnd",
                        "name": "MatchEnd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchend/scores/{id}": {
            "put": {
                "description": "Update one MatchEnd totalScores by id and all related MatchScores by MatchScore ids\nMatchScore ids and scores must be the same length",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchEnd"
                ],
                "summary": "Update one MatchEnd scores",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchEnd ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "matchEndScoresData",
                        "name": "matchEndScoresData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchend/totalscores/{id}": {
            "put": {
                "description": "Update one MatchEnd totalScores by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchEnd"
                ],
                "summary": "Update one MatchEnd totalScores",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchEnd ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchEnd",
                        "name": "MatchEnd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/iswinner/{id}": {
            "put": {
                "description": "Update one MatchResult isWinner by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchResult"
                ],
                "summary": "Update one MatchResult isWinner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchResult",
                        "name": "MatchResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/lanenumber/{id}": {
            "put": {
                "description": "Update one MatchResult laneNumber by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchResult"
                ],
                "summary": "Update one MatchResult laneNumber",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchResult",
                        "name": "MatchResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/matchend": {
            "post": {
                "description": "Post one new MatchEnd data, and auto write totalScores IsConfirmed, and auto create matchScores by teamSize",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MatchEnd"
                ],
                "summary": "Create one MatchEnd",
                "parameters": [
                    {
                        "description": "matchEndData",
                        "name": "matchEndData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/scores/{id}": {
            "get": {
                "description": "Get one MatchResult with match_ends, match_scores, player set by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MatchResult"
                ],
                "summary": "Show one MatchResult with match_ends, match_scores, player set",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/shootoffscore/{id}": {
            "put": {
                "description": "Update one MatchResult shootOffScore by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchResult"
                ],
                "summary": "Update one MatchResult shootOffScore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchResult",
                        "name": "MatchResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/totalpoints/{id}": {
            "put": {
                "description": "Update one MatchResult totalPoints by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchResult"
                ],
                "summary": "Update one MatchResult totalPoints",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchResult",
                        "name": "MatchResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchresult/{id}": {
            "get": {
                "description": "Get one MatchResult with player set by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MatchResult"
                ],
                "summary": "Show one MatchResult with player set",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete one MatchResult with matchEnds and matchScores by id",
                "tags": [
                    "MatchResult"
                ],
                "summary": "Delete one MatchResult",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/matchscore/score/{id}": {
            "put": {
                "description": "Update one MatchScore score by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MatchScore"
                ],
                "summary": "Update one MatchScore score",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MatchScore ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MatchScore",
                        "name": "MatchScore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/medal/elimination/{id}": {
            "get": {
                "description": "get medals of elimination by elimination id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medal"
                ],
                "summary": "Show medals of elimination by elimination id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "elimination ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/medal/playersetid/{id}": {
            "put": {
                "description": "update medal's player set id by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medal"
                ],
                "summary": "Update medal's player set id by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PlayerSetId",
                        "name": "PlayerSetId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/medal/{id}": {
            "get": {
                "description": "get one medal by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medal"
                ],
                "summary": "Show one medal by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/oldlaneinfo": {
            "post": {
                "description": "Post one new OldLaneInfo data with new id, and return the new OldLaneInfo data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OldLaneInfo"
                ],
                "summary": "Create one OldLaneInfo",
                "parameters": [
                    {
                        "description": "LaneData",
                        "name": "LaneData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/oldlaneinfo/confirm/{id}/{stageindex}/{userindex}/{confirm}": {
            "put": {
                "description": "Put one OldLaneInfo confirm by index and id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OldLaneInfo"
                ],
                "summary": "update one OldLaneInfo confirmation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OldLaneInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OldLaneInfo stage index",
                        "name": "stageindex",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OldLaneInfo user index of the stage",
                        "name": "userindex",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "confirmation of the user",
                        "name": "confirm",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/oldlaneinfo/score/{id}/{stageindex}/{userindex}/{arrowindex}/{score}": {
            "put": {
                "description": "Put one OldLaneInfo score by index and id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OldLaneInfo"
                ],
                "summary": "update one OldLaneInfo Score",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OldLaneInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OldLaneInfo stage index",
                        "name": "stageindex",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OldLaneInfo user index of the stage",
                        "name": "userindex",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OldLaneInfo arrow index of the user",
                        "name": "arrowindex",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "score of the arrow",
                        "name": "score",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/oldlaneinfo/whole/{id}": {
            "put": {
                "description": "Put whole new OldLaneInfo and overwrite with the id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OldLaneInfo"
                ],
                "summary": "update one OldLaneInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OldLaneInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LaneData",
                        "name": "LaneData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/oldlaneinfo/{id}": {
            "get": {
                "description": "Get one OldLaneInfo by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OldLaneInfo"
                ],
                "summary": "Show one OldLaneInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "OldLaneInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one OldLaneInfo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OldLaneInfo"
                ],
                "summary": "delete one OldLaneInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OldLaneInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/participant/": {
            "post": {
                "description": "post a particpant to the competition\ncannot repeat participant\nrole cannot be empty\nstatus is always \"pending\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "post a particpant to the competition",
                "parameters": [
                    {
                        "description": "role",
                        "name": "NewParticipantInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.NewParticipantInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "competition ID is not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "db error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/participant/competition": {
            "get": {
                "description": "Get Participants By competition ID, including realname",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "Show Participants By competition ID",
                "parameters": [
                    {
                        "description": "competition ID",
                        "name": "competition_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/participant/competition/user": {
            "get": {
                "description": "Get Participants By competition ID and user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "Show Participants By competition ID and user ID",
                "parameters": [
                    {
                        "description": "competition ID",
                        "name": "competition_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "user ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/participant/user": {
            "get": {
                "description": "Get Participants By user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "Show Participants By user ID",
                "parameters": [
                    {
                        "description": "user ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/participant/whole/{id}": {
            "put": {
                "description": "Put whole new Participant and overwrite with the id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "update one Participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Participant",
                        "name": "Participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/participant/{id}": {
            "get": {
                "description": "Get One Participant By ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "Show One Participant By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one Participant by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participant"
                ],
                "summary": "delete one Participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/dummy/{participantid}": {
            "get": {
                "description": "Get dummy players by participant id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Show dummy players",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Participant ID",
                        "name": "participantid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/dummy/{playerid}": {
            "post": {
                "description": "Create dummy player by player id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Create dummy player",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/endscore": {
            "post": {
                "description": "Create one EndScore by roundend id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Create one EndScore by RoundEnd ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/groupid/{playerid}/{groupid}": {
            "put": {
                "description": "Update one Player groupId by id, and change player laneid to Unassigned lane",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player groupId by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/isconfirmed/{roundendid}": {
            "put": {
                "description": "Update one Player isConfirmed by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player isConfirmed by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RoundEnd ID",
                        "name": "roundendid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/laneid/{playerid}": {
            "put": {
                "description": "Update one Player laneId by id, update lane playernum",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player laneId by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/order/{id}": {
            "put": {
                "description": "Update one Player order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player order by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/playersets/{id}/{eliminationid}": {
            "get": {
                "description": "Get one Player with player sets by id and elimination id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Show one Player with player sets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "eliminationid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/roundend": {
            "post": {
                "description": "Create one RoundEnd by round id, IsComfirmed is false",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Create one RoundEnd by Round ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/score/{endscoreid}": {
            "put": {
                "description": "Update one Player score by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player score by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EndScore ID",
                        "name": "endscoreid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/scores/{id}": {
            "get": {
                "description": "Get one Player with rounds, roundends, endscores by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Show one Player with scores",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/shootoffscore/{id}": {
            "put": {
                "description": "Update one Player shootoffScore by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player shootoffScore by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/totalscore/{id}": {
            "put": {
                "description": "Update one Player total score by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update one Player total score by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/{id}": {
            "get": {
                "description": "Get one Player without other data by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Show one Player without other data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete one Player by id, delete related round, roundend, endscore data, and playerNum minus one in lane",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Delete one Player by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/player/{participantid}": {
            "post": {
                "description": "Create one Player by participant id, create realeted rounds by laneNum of competition, create 6 endscores for each 6 roundends, UnassignedLane playerNum ++",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Create one Player by Participant ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Participant ID",
                        "name": "participantid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/qualification/lanes/{id}": {
            "get": {
                "description": "Get one Qualification with Lanes by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualification"
                ],
                "summary": "Show one Qualification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/qualification/whole/{id}": {
            "put": {
                "description": "Put whole new Qualification and overwrite with the id, and update lanes below it ,but cannot replace groupid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualification"
                ],
                "summary": "update one Qualification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Qualification",
                        "name": "Qualification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/qualification/{id}": {
            "get": {
                "description": "Get one Qualification by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualification"
                ],
                "summary": "Show one Qualification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/competition": {
            "get": {
                "description": "get information of all the competitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "get information of all the competitions",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Competition"
                            }
                        }
                    },
                    "500": {
                        "description": "internal db error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/data/qualification/lanes/Unassigned/{id}": {
            "get": {
                "description": "Get one Qualification with Unassigned Lanes by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualification"
                ],
                "summary": "Show one Qualification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/data/qualification/lanes/players/{id}": {
            "get": {
                "description": "Get one Qualification with Lanes and Players by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualification"
                ],
                "summary": "Show one Qualification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/institution": {
            "get": {
                "description": "get all institution info from db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "get all institution info",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.Institution"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "db error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "add an institution to db\ncannot repeat institution name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "create an institution",
                "parameters": [
                    {
                        "description": "institution's information",
                        "name": "NewInstitutionInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.NewInstitutionInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "empty institution name || institution already exists",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "db error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/institution/{id}": {
            "get": {
                "description": "get institution info from db by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "get institution info by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "institution's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.Institution"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid id",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "no institution found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete an institution from db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "delete an institution",
                "parameters": [
                    {
                        "type": "string",
                        "description": "institution's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "invalid id",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "institution not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/playerset": {
            "post": {
                "description": "Post player set, and build player set match table\nIf team size is 1, set name will be player name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Post player set",
                "parameters": [
                    {
                        "description": "Player Set Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/playerset/elimination/medal/{eliminationid}": {
            "get": {
                "description": "Get player sets which have medals by elimination id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Get player sets which have medals by elimination id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "eliminationid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/playerset/elimination/{eliminationid}": {
            "get": {
                "description": "Get all player sets by elimination id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Get all player sets by elimination id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "eliminationid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/playerset/name/{id}": {
            "put": {
                "description": "Put player set name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Put player set name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Player Set Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/playerset/preranking/{eliminationid}": {
            "put": {
                "description": "Put player set rank by elimination id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Put player set rank",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Elimination ID",
                        "name": "eliminationid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/playerset/{id}": {
            "get": {
                "description": "Get player set with players by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Get player set with players by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete player set, and delete player set match table",
                "tags": [
                    "PlayerSet"
                ],
                "summary": "Delete player set",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/session": {
            "post": {
                "description": "get a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "user_name, password",
                        "name": "LoginInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.LoginInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete the session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/swagger/doc.json": {
            "get": {
                "description": "get Api docs in json",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "Show Api Docs in json",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "add a user to db\nno need to post id\nusername cannot be empty, repeated\npassword cannot be empty\nemail cannot be empty, repeated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "register a user",
                "parameters": [
                    {
                        "description": "nessary information for register",
                        "name": "AccountInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.AccountInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a user object",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    },
                    "400": {
                        "description": "username/email exists | empty username/password/email/institutionID | invalid info",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "db error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "get my uid in the session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get my uid",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/password/{id}": {
            "put": {
                "description": "modify user's password\ncannot change other's password\noriginal password cannot be empty\nnew password cannot be empty\noriginal password must be correct\nnew password cannot be the same as original password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "modify user's password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "modified password information",
                        "name": "ModifyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.ModifyAccountPasswordInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "empty/invalid user id | invalid modified information",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "403": {
                        "description": "cannot change other's password | wrong original password | original \u0026 modified passwords are the same",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "internal db error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "get a user's username, overview, and institution id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get a user's information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "empty/invalid user id",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "no user found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "modify username, realname, email, overview, and institution_id\ncannot change other's info\ncannot change password\nusername cannot be empty, repeated\nemail cannot be empty, repeated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "modify user's information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "modified information",
                        "name": "ModifyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "empty/invalid user id | invalid modified information",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "403": {
                        "description": "cannot change other's info | wrong original password",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "internal db error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Competition": {
            "type": "object",
            "properties": {
                "current_phase": {
                    "type": "integer"
                },
                "elimination_is_active": {
                    "type": "boolean"
                },
                "end_time": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Group"
                    }
                },
                "groups_num": {
                    "type": "integer"
                },
                "host_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lanes_num": {
                    "type": "integer"
                },
                "mixed_elimination_is_active": {
                    "type": "boolean"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Participant"
                    }
                },
                "qualification_current_end": {
                    "type": "integer"
                },
                "qualification_is_active": {
                    "type": "boolean"
                },
                "rounds_num": {
                    "type": "integer"
                },
                "script": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "sub_title": {
                    "type": "string"
                },
                "team_elimination_is_active": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "unassigned_group_id": {
                    "type": "integer"
                },
                "unassigned_lane_id": {
                    "type": "integer"
                }
            }
        },
        "database.EndScore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "round_end_id": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "database.Group": {
            "type": "object",
            "properties": {
                "bow_type": {
                    "type": "string"
                },
                "competition_id": {
                    "type": "integer"
                },
                "group_index": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "group_range": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Player"
                    }
                }
            }
        },
        "database.Institution": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "database.Participant": {
            "type": "object",
            "properties": {
                "competitionID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "database.Player": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lane_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "participant_id": {
                    "type": "integer"
                },
                "player_sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.PlayerSet"
                    }
                },
                "rank": {
                    "type": "integer"
                },
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Round"
                    }
                },
                "shoot_off_score": {
                    "type": "integer"
                },
                "total_score": {
                    "type": "integer"
                }
            }
        },
        "database.PlayerSet": {
            "type": "object",
            "properties": {
                "elimination_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Player"
                    }
                },
                "rank": {
                    "type": "integer"
                },
                "set_name": {
                    "type": "string"
                },
                "total_score": {
                    "type": "integer"
                }
            }
        },
        "database.Round": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "player_id": {
                    "type": "integer"
                },
                "round_ends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.RoundEnd"
                    }
                },
                "total_score": {
                    "type": "integer"
                }
            }
        },
        "database.RoundEnd": {
            "type": "object",
            "properties": {
                "end_scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.EndScore"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_confirmed": {
                    "type": "boolean"
                },
                "round_id": {
                    "type": "integer"
                }
            }
        },
        "database.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "institution_id": {
                    "type": "integer"
                },
                "overview": {
                    "type": "string"
                },
                "real_name": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "endpoint.AccountInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "institution_id": {
                    "type": "integer"
                },
                "overview": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "real_name": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "endpoint.LoginInfo": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "endpoint.ModifyAccountPasswordInfo": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "original_password": {
                    "type": "string"
                }
            }
        },
        "endpoint.NewInstitutionInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "endpoint.NewParticipantInfo": {
            "type": "object",
            "properties": {
                "competitionID": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string",
                    "example": "result description"
                }
            }
        }
    }
}