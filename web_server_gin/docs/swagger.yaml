host: localhost:8080
info:
  contact:
    name: NYCUArchery
    url: https://github.com/NYCUarchery
  description: Gin swagger
  license:
    name: no license yet
  title: Gin swagger
  version: "1.0"
paths:
  /data/competition:
    post:
      consumes:
      - application/json
      description: Post one new Competition data with new id, create noTypeGroup,
        create Lanes and noTypeLane which link to noTypeGroup, and return the new
        Competition data
      parameters:
      - description: Competition
        in: body
        name: Competition
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one Competition and related data
      tags:
      - Competition
  /data/competition/{id}:
    delete:
      consumes:
      - application/json
      description: delete one Competition by id, delete all related groups, lanes,
        players
      parameters:
      - description: Competition ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: delete one Competition
      tags:
      - Competition
    get:
      description: Get one Competition by id without GroupInfo
      parameters:
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Competition without GroupInfo
      tags:
      - Competition
  /data/competition/groups/{id}:
    get:
      description: Get one Competition by id with GroupInfos
      parameters:
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Competition with GroupInfos
      tags:
      - Competition
  /data/competition/groups/players/{id}:
    get:
      description: Get one Competition by id with GroupInfos and Players
      parameters:
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Competition with GroupInfos and Players
      tags:
      - Competition
  /data/competition/participants/{id}:
    get:
      description: Get one Competition by id with Participants
      parameters:
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Competition with Participants
      tags:
      - Competition
  /data/competition/whole/{id}:
    put:
      consumes:
      - application/json
      description: Put whole new Competition and overwrite with the id but without
        GroupInfo, cannot replace RoundNum, GroupNum, LaneNum, FirstLaneId, noTyoeGroupId
      parameters:
      - description: Competition ID
        in: path
        name: id
        required: true
        type: string
      - description: Competition
        in: body
        name: Competition
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one Competition without GroupInfo
      tags:
      - Competition
  /data/groupinfo:
    post:
      consumes:
      - application/json
      description: Post one new GroupInfo data with new id, create qualification with
        same id, and auto write GroupIndex
      parameters:
      - description: LaneData
        in: body
        name: GroupInfo
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one GroupInfo
      tags:
      - GroupInfo
  /data/groupinfo/{id}:
    delete:
      consumes:
      - application/json
      description: delete one GroupInfo by id, delete qualification, and change player
        to noTypeGroup and noTypeLane
      parameters:
      - description: GroupInfo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: delete one GroupInfo
      tags:
      - GroupInfo
    get:
      description: Get one GroupInfo by id
      parameters:
      - description: LaneInfo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one GroupInfo
      tags:
      - GroupInfo
  /data/groupinfo/reorder:
    put:
      consumes:
      - application/json
      description: Put competition_id and group_ids to update GroupInfos Indexes under
        the same Competition
      parameters:
      - description: GroupInfo IDs for reorder
        in: body
        name: groupIdsForReorder
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update GroupInfos Indexes under the same Competition
      tags:
      - GroupInfo
  /data/groupinfo/whole/{id}:
    put:
      consumes:
      - application/json
      description: Put whole new GroupInfo and overwrite with the id, cannot overwrite
        CompetitionId
      parameters:
      - description: GroupInfo ID
        in: path
        name: id
        required: true
        type: string
      - description: GroupInfo
        in: body
        name: GroupInfo
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one GroupInfo
      tags:
      - GroupInfo
  /data/lane/{id}:
    get:
      description: Get one Lane by id
      parameters:
      - description: Lane ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Lane
      tags:
      - Lane
  /data/lane/all/{id}:
    get:
      description: Get all Lane by competition id
      parameters:
      - description: competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show all Lane of a competition
      tags:
      - Lane
  /data/lane/scores/{id}:
    get:
      description: Get one Lane with players, rounds, roundends, roundscores by id
      parameters:
      - description: Lane ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Lane with players, rounds, roundends, roundscores
      tags:
      - Lane
  /data/oldlaneinfo:
    post:
      consumes:
      - application/json
      description: Post one new OldLaneInfo data with new id, and return the new OldLaneInfo
        data
      parameters:
      - description: LaneData
        in: body
        name: LaneData
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one OldLaneInfo
      tags:
      - OldLaneInfo
  /data/oldlaneinfo/{id}:
    delete:
      consumes:
      - application/json
      description: delete one OldLaneInfo by id
      parameters:
      - description: OldLaneInfo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: delete one OldLaneInfo
      tags:
      - OldLaneInfo
    get:
      description: Get one OldLaneInfo by id
      parameters:
      - description: OldLaneInfo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one OldLaneInfo
      tags:
      - OldLaneInfo
  /data/oldlaneinfo/confirm/{id}/{stageindex}/{userindex}/{confirm}:
    put:
      consumes:
      - application/json
      description: Put one OldLaneInfo confirm by index and id
      parameters:
      - description: OldLaneInfo ID
        in: path
        name: id
        required: true
        type: string
      - description: OldLaneInfo stage index
        in: path
        name: stageindex
        required: true
        type: string
      - description: OldLaneInfo user index of the stage
        in: path
        name: userindex
        required: true
        type: string
      - description: confirmation of the user
        in: path
        name: confirm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one OldLaneInfo confirmation
      tags:
      - OldLaneInfo
  /data/oldlaneinfo/score/{id}/{stageindex}/{userindex}/{arrowindex}/{score}:
    put:
      consumes:
      - application/json
      description: Put one OldLaneInfo score by index and id
      parameters:
      - description: OldLaneInfo ID
        in: path
        name: id
        required: true
        type: string
      - description: OldLaneInfo stage index
        in: path
        name: stageindex
        required: true
        type: string
      - description: OldLaneInfo user index of the stage
        in: path
        name: userindex
        required: true
        type: string
      - description: OldLaneInfo arrow index of the user
        in: path
        name: arrowindex
        required: true
        type: string
      - description: score of the arrow
        in: path
        name: score
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one OldLaneInfo Score
      tags:
      - OldLaneInfo
  /data/oldlaneinfo/whole/{id}:
    put:
      consumes:
      - application/json
      description: Put whole new OldLaneInfo and overwrite with the id
      parameters:
      - description: OldLaneInfo ID
        in: path
        name: id
        required: true
        type: string
      - description: LaneData
        in: body
        name: LaneData
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one OldLaneInfo
      tags:
      - OldLaneInfo
  /data/participant:
    post:
      consumes:
      - application/json
      description: Post one new Participant data with new id
      parameters:
      - description: Participant
        in: body
        name: Participant
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one Participant
      tags:
      - Participant
  /data/participant/{id}:
    delete:
      consumes:
      - application/json
      description: delete one Participant by id
      parameters:
      - description: Participant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: delete one Participant
      tags:
      - Participant
    get:
      description: Get One Participant By ID
      parameters:
      - description: Participant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show One Participant By ID
      tags:
      - Participant
  /data/participant/whole/{id}:
    put:
      consumes:
      - application/json
      description: Put whole new Participant and overwrite with the id
      parameters:
      - description: Participant ID
        in: path
        name: id
        required: true
        type: string
      - description: Participant
        in: body
        name: Participant
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one Participant
      tags:
      - Participant
  /data/player/{id}:
    delete:
      description: Delete one Player by id, delete related round, roundend, roundscore
        data, and playerNum minus one in lane
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete one Player by id
      tags:
      - Player
    get:
      description: Get one Player without other data by id
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Player without other data
      tags:
      - Player
  /data/player/{participantid}:
    post:
      description: Create one Player by participant id, create realeted rounds by
        laneNum of competition, noTypeLane playerNum ++
      parameters:
      - description: Participant ID
        in: path
        name: participantid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one Player by Participant ID
      tags:
      - Player
  /data/player/groupid/{playerid}/{groupid}:
    put:
      consumes:
      - application/json
      description: Update one Player groupId by id, and change player laneid to notype
        lane
      parameters:
      - description: Player ID
        in: path
        name: playerid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update one Player groupId by id
      tags:
      - Player
  /data/player/laneid/{playerid}:
    put:
      consumes:
      - application/json
      description: Update one Player laneId by id, update lane playernum
      parameters:
      - description: Player ID
        in: path
        name: playerid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update one Player laneId by id
      tags:
      - Player
  /data/player/roundend:
    post:
      consumes:
      - application/json
      description: Create one RoundEnd by round id, IsComfirmed is false
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one RoundEnd by Round ID
      tags:
      - Player
  /data/player/roundscore:
    post:
      consumes:
      - application/json
      description: Create one RoundScore by roundend id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one RoundScore by RoundEnd ID
      tags:
      - Player
  /data/player/scores/{id}:
    get:
      description: Get one Player with rounds, roundends, roundscores by id
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Player with scores
      tags:
      - Player
  /data/qualification/{id}:
    get:
      description: Get one Qualification by id
      parameters:
      - description: Qualification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Qualification
      tags:
      - Qualification
  /data/qualification/lanes/{id}:
    get:
      description: Get one Qualification with Lanes by id
      parameters:
      - description: Qualification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Qualification
      tags:
      - Qualification
  /data/qualification/lanes/players/{id}:
    get:
      description: Get one Qualification with Lanes and Players by id
      parameters:
      - description: Qualification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show one Qualification
      tags:
      - Qualification
  /data/qualification/whole/{id}:
    put:
      consumes:
      - application/json
      description: Put whole new Qualification and overwrite with the id, and update
        lanes below it ,but cannot replace groupid
      parameters:
      - description: Qualification ID
        in: path
        name: id
        required: true
        type: string
      - description: Qualification
        in: body
        name: Qualification
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one Qualification
      tags:
      - Qualification
  /data/user:
    post:
      consumes:
      - application/json
      description: Post one new User data with new id
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create one User
      tags:
      - User
  /data/user/{id}:
    delete:
      consumes:
      - application/json
      description: delete one User by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: delete one User
      tags:
      - User
    get:
      description: Get One User By ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show One User By ID
      tags:
      - User
  /data/user/whole/{id}:
    put:
      consumes:
      - application/json
      description: Put whole new User and overwrite with the id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: User
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update one User
      tags:
      - User
  /swagger/doc.json:
    get:
      description: get Api docs in json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Show Api Docs in json
      tags:
      - docs
  /views/home:
    get:
      description: show home page
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Show home page
      tags:
      - views
swagger: "2.0"
